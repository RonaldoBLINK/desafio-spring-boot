openapi: 3.0.3
info:
  title: NUEVO SPA Task Management API
  description: API RESTful para la gestión de tareas de la empresa NUEVO SPA
  version: 1.0.0
  contact:
    name: NUEVO SPA
    email: support@nuevospa.com

servers:
  - url: http://localhost:8080
    description: Servidor de desarrollo

tags:
  - name: authentication
    description: Operaciones de autenticación
  - name: tasks
    description: Operaciones de gestión de tareas

paths:
  /api/auth/login:
    post:
      tags:
        - authentication
      summary: Autenticar usuario
      description: Permite a los usuarios obtener un token JWT para acceder a los recursos protegidos
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Credenciales no válidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/tasks:
    get:
      tags:
        - tasks
      summary: Listar todas las tareas
      description: Obtiene una lista de todas las tareas del usuario autenticado
      operationId: getAllTasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de tareas recuperada con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - tasks
      summary: Crear una nueva tarea
      description: Crea una nueva tarea para el usuario autenticado
      operationId: createTask
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Tarea creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Datos de solicitud no válidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/tasks/{id}:
    get:
      tags:
        - tasks
      summary: Obtener una tarea por ID
      description: Obtiene una tarea específica por su ID
      operationId: getTaskById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID de la tarea a recuperar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tarea recuperada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Tarea no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - tasks
      summary: Actualizar una tarea existente
      description: Actualiza una tarea existente por su ID
      operationId: updateTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID de la tarea a actualizar
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: Tarea actualizada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Datos de solicitud no válidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Tarea no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - tasks
      summary: Eliminar una tarea
      description: Elimina una tarea existente por su ID
      operationId: deleteTask
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID de la tarea a eliminar
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Tarea eliminada con éxito
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Tarea no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: "usuario1"
        email:
          type: string
          format: email
          example: "usuario1@ejemplo.com"

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "usuario1"
        password:
          type: string
          format: password
          example: "password123"

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        tokenType:
          type: string
          example: "Bearer"
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: "usuario1"

    TaskStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Pendiente"

    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Completar reporte mensual"
        description:
          type: string
          example: "Elaborar el reporte mensual de actividades para el departamento de marketing"
        dueDate:
          type: string
          format: date-time
          example: "2025-04-15T14:30:00Z"
        status:
          $ref: '#/components/schemas/TaskStatus'
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
          example: "2025-03-20T10:15:30Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-03-22T16:45:20Z"

    TaskRequest:
      type: object
      required:
        - title
        - statusId
      properties:
        title:
          type: string
          example: "Completar reporte mensual"
        description:
          type: string
          example: "Elaborar el reporte mensual de actividades para el departamento de marketing"
        dueDate:
          type: string
          format: date-time
          example: "2025-04-15T14:30:00Z"
        statusId:
          type: integer
          format: int64
          example: 1

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-03-24T12:34:56Z"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "Bad Request"
        message:
          type: string
          example: "Datos de solicitud inválidos"
        path:
          type: string
          example: "/api/tasks"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT